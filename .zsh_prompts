# hostname coloring
ip2color()
{
    IFCONF='/sbin/ifconfig'
    test -x /sbin/ifconfig && IFCONF=/sbin/ifconfig
    test -x /bin/ifconfig && IFCONF=/bin/ifconfig
    int=`netstat -rn | awk '/^(default|0\.0\.0\.0)/ { print $NF; exit 0 }'`
    ip4oc=`ip -4 addr show dev ${int} | awk -F'[\s\./]' '/inet.*/{print $4}'`
    #ip4oc=`${IFCONF} ${int} \
    #    | awk -F'[.[:space:]]' '/inet.*[0-9]{1,3}(\.[0-9]{1,3}){3}/{print $6; exit 0}'`
    [ $ip4oc = '255' ] &&
        ip4oc=`${IFCONF} $int | awk '/inet[^6]/{ print $1; exit 0 }' \
        | sed -n "1 p" | sed -e 's/.*\.\([0-9]\{1,3\}\).*/\1/g'`

    RET=`expr $(expr $ip4oc % 7 2> /dev/null) + 1 2> /dev/null`
    [ $? -ne 0 ] && echo "expr err: not a decimal number; ip4oc = '${ip4oc}'"
    return RET
}

# PROMPT
set_prompt()
{
    if test $# -eq 1
    then
        col=$1
    else
        col=33
    fi

    case ${UID} in
        0)
            PROMPT="%B%{[34m%}%/#%{[m%}%b "
            PROMPT2="%B%{[34m%}%_#%{[m%}%b "
            SPROMPT="%B%{[31m%}%r ? [n,y,a,e]:%{[m%}%b "
            [ -n "${REMOTEHOST}${SSH_CONNECTION}" ] && 
            PROMPT="[%{[3${col}m%}${HOST%%.*}%{[0m%}] ${PROMPT}"
            ;;
        *)
            PROMPT="%{[34m%}%/%%%{[m%} "
            PROMPT2="%{[34m%}%_%%%{[m%} "
            SPROMPT="%{[31m%}%r ? [n,y,a,e]:%{[m%} "
            [ -n "${REMOTEHOST}${SSH_CONNECTION}" ] && 
            PROMPT="[%{[3${col}m%}${HOST%%.*}%{[0m%}] ${PROMPT}"
            ;;
    esac
}

autoload colors
colors

ip2color
set_prompt $?

# vcs_info (display branch name)
autoload -Uz vcs_info
zstyle ':vcs_info:*' formats '(%s)-[%b]'
zstyle ':vcs_info:*' actionformats '(%s)-[%b|%a]'
autoload -Uz is-at-least
if is-at-least 4.3.10; then
    zstyle ':vcs_info:git:*' check-for-changes true
    zstyle ':vcs_info:git:*' stagedstr "+"
    zstyle ':vcs_info:git:*' unstagedstr "-"
    zstyle ':vcs_info:git:*' formats "(%s)-[%c%u%b]"
    zstyle ':vcs_info:git:*' actionformats '(%s)-[%c%u%b|%a]'
fi
precmd () {
    psvar=()
    LANG=en_US.UTF-8 vcs_info
    psvar[2]=$(_git_not_pushed)
    [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
}

function _git_not_pushed()
{
    if [ "$(git rev-parse --is-inside-work-tree 2>/dev/null)" = "true" ]; then
        head="$(git rev-parse HEAD)"
        for x in $(git rev-parse --remotes)
        do
            if [ "$head" = "$x" ]; then
                return 0
            fi
        done
        echo "{?}"
    fi
    return 0
}

RPROMPT="%1(v|%F{green}%1v%2v%f|)${vcs_info_git_pushed}${WINDOW:+"[$WINDOW]"} ${RESET}"

# RPROMPT other settings
RPROMPT="${RPROMPT} %T"           # 右側に時間を表示する
setopt transient_rprompt          # 右側まで入力がきたら時間を消す
setopt prompt_subst               # 便利なプロント

# terminal settings
case "${TERM}" in
kterm*|xterm)
    precmd() {
        echo -ne "\033]0;${USER}@${HOST%%.*}:${PWD}\007"
    }
;;
esac

